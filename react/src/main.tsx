import "@unocss/reset/normalize.css";
// A virtual CSS file generated by UnoCSS.
// eslint-disable-next-line import-x/no-unresolved
import "virtual:uno.css";

import {
	TanStackDevtools,
} from "@tanstack/react-devtools";
import {
	QueryClient,
	QueryClientProvider,
} from "@tanstack/react-query";
import {
	ReactQueryDevtoolsPanel,
} from "@tanstack/react-query-devtools";
import {
	createRouter,
	RouterProvider,
} from "@tanstack/react-router";
import {
	TanStackRouterDevtoolsPanel,
} from "@tanstack/react-router-devtools";
import {
	StrictMode,
} from "react";
import {
	createRoot,
} from "react-dom/client";

import {
	isNull,
} from "@/utilities/is-null";

import {
	routeTree,
} from "./routeTree.gen";

const router = createRouter({
	routeTree,
});

declare module "@tanstack/react-router" {
	interface Register {
		router: typeof router;
	}
}

const queryClient = new QueryClient({
	defaultOptions: {
		queries: {
			refetchOnWindowFocus: false,
		},
	},
});

const rootElement = document.getElementById("root");

if (!isNull(rootElement)) {
	const root = createRoot(rootElement);

	root.render(
		<StrictMode>
			<QueryClientProvider
				client={queryClient}
			>
				<RouterProvider
					router={router}
				/>
			</QueryClientProvider>

			{
				import.meta.env.DEV
					? (
						<TanStackDevtools
							plugins={[
								{
									name: "TanStack Query",
									render: (
										<ReactQueryDevtoolsPanel
											client={queryClient}
										/>
									),
								},
								{
									name: "TanStack Router",
									render: (
										<TanStackRouterDevtoolsPanel
											router={router}
										/>
									),
								},
							]}
						/>
					)
					: null
			}
		</StrictMode>,
	);
}
